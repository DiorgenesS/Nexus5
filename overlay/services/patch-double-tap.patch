From 18d0daa3f9b0a4b32a25c4711b9bee1f57e064a1 Mon Sep 17 00:00:00 2001
From: Diorgenes <dyogenes_gd@hotmail.com>
Date: Wed, 19 Apr 2017 10:32:17 -0300
Subject: [PATCH 3/3] Double tap and swipe

---
 .../android/server/policy/PhoneWindowManager.smali |  12 +
 .../PhoneWindowManagers$SwipeListener$1.smali      | 883 +++++++++++++++++++++
 .../policy/PhoneWindowManagers$SwipeListener.smali |  53 ++
 3 files changed, 948 insertions(+)


--- a/services/smali/com/android/server/policy/PhoneWindowManager.smali
+++ b/services/smali/com/android/server/policy/PhoneWindowManager.smali
@@ -199,6 +199,8 @@
 
 
 # instance fields
+.field mSwipeListener:Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
 .field mAccelerometerDefault:Z
 
 .field mAccessibilityManager:Landroid/view/accessibility/AccessibilityManager;
@@ -14572,6 +14574,16 @@
     .prologue
     move-object/from16 v0, p1
 
+    move-object/from16 v1, p0
+
+    new-instance v4, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
+    invoke-direct {v4, v0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;-><init>(Landroid/content/Context;)V
+
+    iput-object v4, v1, Lcom/android/server/policy/PhoneWindowManager;->mSwipeListener:Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
+    move-object/from16 v0, p1
+
     iput-object v0, p0, Lcom/android/server/policy/PhoneWindowManager;->mContext:Landroid/content/Context;
 
     move-object/from16 v0, p2

--- /dev/null
+++ b/services/smali/com/android/server/policy/PhoneWindowManagers$SwipeListener$1.smali
@@ -0,0 +1,883 @@
+.class Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;
+.super Landroid/content/BroadcastReceiver;
+.source "PhoneWindowManagers$SwipeListener.java"
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingMethod;
+    value = Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->regReceiver()V
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x0
+    name = null
+.end annotation
+
+
+# instance fields
+.field mDownTime:J
+
+.field final synthetic this$0:Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
+
+# direct methods
+.method constructor <init>(Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;)V
+    .locals 0
+
+    iput-object p1, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->this$0:Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
+    invoke-direct {p0}, Landroid/content/BroadcastReceiver;-><init>()V
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public expandStatusBar()V
+    .locals 14
+
+    iget-object v1, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->this$0:Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
+    # getter for: Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->mContext:Landroid/content/Context;
+    invoke-static {v1}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->access$0(Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;)Landroid/content/Context;
+
+    move-result-object v4
+
+    const-string/jumbo v5, "statusbar"
+
+    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    :try_start_0
+    const-string v4, "android.app.StatusBarManager"
+
+    invoke-static {v4}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;
+
+    move-result-object v3
+
+    sget v4, Landroid/os/Build$VERSION;->SDK_INT:I
+
+    const/16 v5, 0x11
+
+    if-lt v4, v5, :cond_0
+
+    const-string/jumbo v4, "expandNotificationsPanel"
+
+    const/4 v5, 0x0
+
+    new-array v5, v5, [Ljava/lang/Class;
+
+    invoke-virtual {v3, v4, v5}, Ljava/lang/Class;->getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+
+    move-result-object v1
+
+    :goto_0
+    const/4 v4, 0x0
+
+    new-array v4, v4, [Ljava/lang/Object;
+
+    invoke-virtual {v1, v2, v4}, Ljava/lang/reflect/Method;->invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
+
+    :goto_1
+    return-void
+
+    :cond_0
+    const-string/jumbo v4, "expand"
+
+    const/4 v5, 0x0
+
+    new-array v5, v5, [Ljava/lang/Class;
+
+    invoke-virtual {v3, v4, v5}, Ljava/lang/Class;->getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
+    :try_end_0
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
+
+    move-result-object v1
+
+    goto :goto_0
+
+    :catch_0
+    move-exception v0
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    goto :goto_1
+.end method
+
+.method public isBlueToothOn()Z
+    .locals 4
+
+    const/4 v1, 0x1
+
+    const/4 v2, 0x0
+
+    const/4 v0, 0x0
+
+    if-nez v0, :cond_0
+
+    invoke-static {}, Landroid/bluetooth/BluetoothAdapter;->getDefaultAdapter()Landroid/bluetooth/BluetoothAdapter;
+
+    move-result-object v0
+
+    :cond_0
+    invoke-virtual {v0}, Landroid/bluetooth/BluetoothAdapter;->getState()I
+
+    move-result v3
+
+    packed-switch v3, :pswitch_data_0
+
+    move v1, v2
+
+    :goto_0
+    :pswitch_0
+    return v1
+
+    :pswitch_1
+    move v1, v2
+
+    goto :goto_0
+
+    :pswitch_2
+    move v1, v2
+
+    goto :goto_0
+
+    :pswitch_data_0
+    .packed-switch 0xa
+        :pswitch_1
+        :pswitch_0
+        :pswitch_0
+        :pswitch_2
+    .end packed-switch
+.end method
+
+.method public killall()V
+    .locals 15
+
+    iget-object v1, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->this$0:Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
+    # getter for: Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->mContext:Landroid/content/Context;
+    invoke-static {v1}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->access$0(Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;)Landroid/content/Context;
+
+    move-result-object v1
+
+    new-instance v3, Ljava/util/HashSet;
+
+    invoke-direct {v3}, Ljava/util/HashSet;-><init>()V
+
+    invoke-virtual {v1}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v11
+
+    const-string/jumbo v12, "MemClean"
+
+    invoke-static {v11, v12}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v9
+
+    if-eqz v9, :cond_0
+
+    const-string v11, "\\|"
+
+    invoke-virtual {v9, v11}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;
+
+    move-result-object v10
+
+    move-object v0, v10
+
+    array-length v5, v0
+
+    const/4 v2, 0x0
+
+    :goto_0
+    if-ge v2, v5, :cond_0
+
+    aget-object v7, v0, v2
+
+    invoke-virtual {v3, v7}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
+
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_0
+
+    :cond_0
+    iget-object v11, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->this$0:Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
+    # getter for: Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->mContext:Landroid/content/Context;
+    invoke-static {v11}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->access$0(Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;)Landroid/content/Context;
+
+    move-result-object v11
+
+    const-string v13, "activity"
+
+    invoke-virtual {v11, v13}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v11
+
+    check-cast v11, Landroid/app/ActivityManager;
+
+    invoke-virtual {v11}, Landroid/app/ActivityManager;->getRunningAppProcesses()Ljava/util/List;
+
+    move-result-object v6
+
+    invoke-interface {v6}, Ljava/util/List;->iterator()Ljava/util/Iterator;
+
+    move-result-object v2
+
+    :cond_1
+    :goto_1
+    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v11
+
+    if-eqz v11, :cond_2
+
+    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Landroid/app/ActivityManager$RunningAppProcessInfo;
+
+    iget-object v11, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->processName:Ljava/lang/String;
+
+    const-string v12, ":"
+
+    invoke-virtual {v11, v12}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;
+
+    move-result-object v11
+
+    const/4 v12, 0x0
+
+    aget-object v8, v11, v12
+
+    iget v11, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->importance:I
+
+    const/16 v12, 0x12c
+
+    if-le v11, v12, :cond_1
+
+    invoke-virtual {v3, v8}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z
+
+    move-result v11
+
+    if-nez v11, :cond_1
+
+    iget-object v11, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->this$0:Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
+    # getter for: Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->mContext:Landroid/content/Context;
+    invoke-static {v11}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->access$0(Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;)Landroid/content/Context;
+
+    move-result-object v11
+
+    const-string v13, "activity"
+
+    invoke-virtual {v11, v13}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v11
+
+    check-cast v11, Landroid/app/ActivityManager;
+
+    invoke-virtual {v11, v8}, Landroid/app/ActivityManager;->killBackgroundProcesses(Ljava/lang/String;)V
+
+    goto :goto_1
+
+    :cond_2
+    const-string/jumbo v2, "Cleaning up memory..."
+
+    const/4 v3, 0x0
+
+    invoke-static {v1, v2, v3}, Landroid/widget/Toast;->makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Landroid/widget/Toast;->show()V
+
+    return-void
+.end method
+
+.method public onReceive(Landroid/content/Context;Landroid/content/Intent;)V
+    .locals 3
+
+    invoke-virtual {p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string v2, "my.settings.GESTURE"
+
+    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_0
+
+    return-void
+
+    :cond_0
+    const/4 v0, 0x0
+
+    const-string v1, "action"
+
+    const/16 v2, 0x3e7
+
+    invoke-virtual {p2, v1, v2}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I
+
+    move-result v1
+
+    packed-switch v1, :pswitch_data_0
+
+    goto :goto_0
+
+    :goto_0
+    return-void
+
+    :pswitch_0
+    invoke-virtual {p0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->sendSleepEvent()V
+
+    goto :goto_0
+
+    :pswitch_1
+    invoke-virtual {p0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->powerMenu()V
+
+    goto :goto_0
+
+    :pswitch_2
+    invoke-virtual {p0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->sendRecentKeyEvent()V
+
+    goto :goto_0
+
+    :pswitch_3
+    invoke-virtual {p0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->sendCalllogKeyEvent()V
+
+    goto :goto_0
+
+    :pswitch_4
+    invoke-virtual {p0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->sendSearchKeyEvent()V
+
+    goto :goto_0
+
+    :pswitch_5
+    invoke-virtual {p0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->setAudioMode()V
+
+    goto :goto_0
+
+    :pswitch_6
+    invoke-virtual {p0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->expandStatusBar()V
+
+    goto :goto_0
+
+    :pswitch_7
+    invoke-virtual {p0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->toggleWifi()V
+
+    goto :goto_0
+
+    :pswitch_8
+    invoke-virtual {p0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->toggleBlueTooth()V
+
+    goto :goto_0
+
+    :pswitch_9
+    invoke-virtual {p0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->killall()V
+
+    goto :goto_0
+
+    nop
+
+    :pswitch_data_0
+    .packed-switch 0x0
+        :pswitch_0
+        :pswitch_1
+        :pswitch_2
+        :pswitch_3
+        :pswitch_4
+        :pswitch_5
+        :pswitch_6
+        :pswitch_7
+        :pswitch_8
+        :pswitch_9
+    .end packed-switch
+.end method
+
+.method public powerMenu()V
+    .locals 10
+
+    const/4 v1, 0x0
+
+    const/16 v2, 0x80
+
+    invoke-virtual {p0, v1, v2}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->sendEvent(II)V
+
+    const/4 v1, 0x2
+
+    iget-object v5, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->this$0:Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
+    # getter for: Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->mContext:Landroid/content/Context;
+    invoke-static {v5}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->access$0(Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;)Landroid/content/Context;
+
+    move-result-object v5
+
+    new-instance v6, Landroid/view/View;
+
+    invoke-direct {v6, v5}, Landroid/view/View;-><init>(Landroid/content/Context;)V
+
+    invoke-virtual {v6, v1}, Landroid/view/View;->sendAccessibilityEvent(I)V
+
+    return-void
+.end method
+
+.method public sendCalllogKeyEvent()V
+    .locals 15
+
+    const/4 v7, 0x0
+
+    const/4 v3, 0x2
+
+    new-array v13, v3, [I
+
+    fill-array-data v13, :array_0
+
+    const-wide/16 v1, 0x0
+
+    const/4 v0, 0x0
+
+    const/4 v14, 0x0
+
+    :goto_0
+    array-length v3, v13
+
+    if-ge v14, v3, :cond_0
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v1
+
+    new-instance v0, Landroid/view/KeyEvent;
+
+    aget v5, v13, v14
+
+    const v6, 0x5
+
+    const/4 v9, -0x1
+
+    const v11, 0x10000008
+
+    const/16 v12, 0x101
+
+    move-wide v3, v1
+
+    move v8, v7
+
+    move v10, v7
+
+    invoke-direct/range {v0 .. v12}, Landroid/view/KeyEvent;-><init>(JJIIIIIIII)V
+
+    invoke-static {}, Landroid/hardware/input/InputManager;->getInstance()Landroid/hardware/input/InputManager;
+
+    move-result-object v3
+
+    invoke-virtual {v3, v0, v7}, Landroid/hardware/input/InputManager;->injectInputEvent(Landroid/view/InputEvent;I)Z
+
+    add-int/lit8 v14, v14, 0x1
+
+    goto :goto_0
+
+    :cond_0
+    return-void
+
+    :array_0
+    .array-data 4
+        0x0
+        0x1
+    .end array-data
+.end method
+
+.method sendEvent(II)V
+    .locals 2
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v0
+
+    invoke-virtual {p0, p1, p2, v0, v1}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->sendEvent(IIJ)V
+
+    return-void
+.end method
+
+.method sendEvent(IIJ)V
+    .locals 13
+
+    and-int/lit16 v1, p2, 0x80
+
+    if-eqz v1, :cond_0
+
+    const/4 v7, 0x1
+
+    :goto_0
+    new-instance v0, Landroid/view/KeyEvent;
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v1
+
+    iput-wide v1, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->mDownTime:J
+
+    const/16 v6, 0x1a
+
+    const/4 v8, 0x0
+
+    const/4 v9, -0x1
+
+    const/4 v10, 0x0
+
+    or-int/lit8 v3, p2, 0x8
+
+    or-int/lit8 v11, v3, 0x40
+
+    const/16 v12, 0x101
+
+    move-wide/from16 v3, p3
+
+    move v5, p1
+
+    invoke-direct/range {v0 .. v12}, Landroid/view/KeyEvent;-><init>(JJIIIIIIII)V
+
+    invoke-static {}, Landroid/hardware/input/InputManager;->getInstance()Landroid/hardware/input/InputManager;
+
+    move-result-object v1
+
+    const/4 v2, 0x0
+
+    invoke-virtual {v1, v0, v2}, Landroid/hardware/input/InputManager;->injectInputEvent(Landroid/view/InputEvent;I)Z
+
+    return-void
+
+    :cond_0
+    const/4 v7, 0x0
+
+    goto :goto_0
+.end method
+
+.method public sendRecentKeyEvent()V
+    .locals 15
+
+    const/4 v7, 0x0
+
+    const/4 v3, 0x2
+
+    new-array v13, v3, [I
+
+    fill-array-data v13, :array_0
+
+    const-wide/16 v1, 0x0
+
+    const/4 v0, 0x0
+
+    const/4 v14, 0x0
+
+    :goto_0
+    array-length v3, v13
+
+    if-ge v14, v3, :cond_0
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v1
+
+    new-instance v0, Landroid/view/KeyEvent;
+
+    aget v5, v13, v14
+
+    const/16 v6, 0xbb
+
+    const/4 v9, -0x1
+
+    const v11, 0x10000008
+
+    const/16 v12, 0x101
+
+    move-wide v3, v1
+
+    move v8, v7
+
+    move v10, v7
+
+    invoke-direct/range {v0 .. v12}, Landroid/view/KeyEvent;-><init>(JJIIIIIIII)V
+
+    invoke-static {}, Landroid/hardware/input/InputManager;->getInstance()Landroid/hardware/input/InputManager;
+
+    move-result-object v3
+
+    invoke-virtual {v3, v0, v7}, Landroid/hardware/input/InputManager;->injectInputEvent(Landroid/view/InputEvent;I)Z
+
+    add-int/lit8 v14, v14, 0x1
+
+    goto :goto_0
+
+    :cond_0
+    return-void
+
+    nop
+
+    :array_0
+    .array-data 4
+        0x0
+        0x1
+    .end array-data
+.end method
+
+.method public sendSearchKeyEvent()V
+    .locals 15
+
+    const/4 v7, 0x0
+
+    const/4 v3, 0x2
+
+    new-array v13, v3, [I
+
+    fill-array-data v13, :array_0
+
+    const-wide/16 v1, 0x0
+
+    const/4 v0, 0x0
+
+    const/4 v14, 0x0
+
+    :goto_0
+    array-length v3, v13
+
+    if-ge v14, v3, :cond_0
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v1
+
+    new-instance v0, Landroid/view/KeyEvent;
+
+    aget v5, v13, v14
+
+    const/16 v6, 0x54
+
+    const/4 v9, -0x1
+
+    const v11, 0x10000008
+
+    const/16 v12, 0x101
+
+    move-wide v3, v1
+
+    move v8, v7
+
+    move v10, v7
+
+    invoke-direct/range {v0 .. v12}, Landroid/view/KeyEvent;-><init>(JJIIIIIIII)V
+
+    invoke-static {}, Landroid/hardware/input/InputManager;->getInstance()Landroid/hardware/input/InputManager;
+
+    move-result-object v3
+
+    invoke-virtual {v3, v0, v7}, Landroid/hardware/input/InputManager;->injectInputEvent(Landroid/view/InputEvent;I)Z
+
+    add-int/lit8 v14, v14, 0x1
+
+    goto :goto_0
+
+    :cond_0
+    return-void
+
+    nop
+
+    :array_0
+    .array-data 4
+        0x0
+        0x1
+    .end array-data
+.end method
+
+.method public sendSleepEvent()V
+    .locals 10
+
+    iget-object v0, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->this$0:Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
+    # getter for: Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->mContext:Landroid/content/Context;
+    invoke-static {v0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->access$0(Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;)Landroid/content/Context;
+
+    move-result-object v0
+
+    const-string/jumbo v1, "power"
+
+    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Landroid/os/PowerManager;
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v2
+
+    invoke-virtual {v0, v2, v3}, Landroid/os/PowerManager;->goToSleep(J)V
+
+    return-void
+.end method
+
+.method public setAudioMode()V
+    .locals 15
+
+    iget-object v0, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->this$0:Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
+    # getter for: Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->mContext:Landroid/content/Context;
+    invoke-static {v0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->access$0(Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;)Landroid/content/Context;
+
+    move-result-object v1
+
+    const-string v4, "audio"
+
+    invoke-virtual {v1, v4}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Landroid/media/AudioManager;
+
+    invoke-virtual {v0}, Landroid/media/AudioManager;->getRingerMode()I
+
+    move-result v3
+
+    packed-switch v3, :pswitch_data_0
+
+    :goto_0
+    return-void
+
+    :pswitch_0
+    const/4 v4, 0x2
+
+    invoke-virtual {v0, v4}, Landroid/media/AudioManager;->setRingerMode(I)V
+
+    goto :goto_0
+
+    :pswitch_1
+    const/4 v4, 0x0
+
+    invoke-virtual {v0, v4}, Landroid/media/AudioManager;->setRingerMode(I)V
+
+    goto :goto_0
+
+    :pswitch_2
+    const/4 v4, 0x1
+
+    invoke-virtual {v0, v4}, Landroid/media/AudioManager;->setRingerMode(I)V
+
+    goto :goto_0
+
+    nop
+
+    :pswitch_data_0
+    .packed-switch 0x0
+        :pswitch_0
+        :pswitch_1
+        :pswitch_2
+    .end packed-switch
+.end method
+
+.method public toggleBlueTooth()V
+    .locals 4
+
+    iget-object v0, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->this$0:Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
+    # getter for: Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->mContext:Landroid/content/Context;
+    invoke-static {v0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->access$0(Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;)Landroid/content/Context;
+
+    move-result-object v0
+
+    const/4 v3, 0x0
+
+    invoke-static {}, Landroid/bluetooth/BluetoothAdapter;->getDefaultAdapter()Landroid/bluetooth/BluetoothAdapter;
+
+    move-result-object v1
+
+    invoke-virtual {p0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->isBlueToothOn()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_0
+
+    invoke-virtual {v1}, Landroid/bluetooth/BluetoothAdapter;->disable()Z
+
+    const-string/jumbo v2, "Blutooth off"
+
+    invoke-static {v0, v2, v3}, Landroid/widget/Toast;->makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Landroid/widget/Toast;->show()V
+
+    :goto_0
+    return-void
+
+    :cond_0
+    invoke-virtual {v1}, Landroid/bluetooth/BluetoothAdapter;->enable()Z
+
+    const-string/jumbo v2, "Bluetooth on"
+
+    invoke-static {v0, v2, v3}, Landroid/widget/Toast;->makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Landroid/widget/Toast;->show()V
+
+    goto :goto_0
+.end method
+
+.method public toggleWifi()V
+    .locals 4
+
+    iget-object v0, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;->this$0:Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+
+    # getter for: Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->mContext:Landroid/content/Context;
+    invoke-static {v0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->access$0(Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;)Landroid/content/Context;
+
+    move-result-object v0
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v2, "wifi"
+
+    invoke-virtual {v0, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Landroid/net/wifi/WifiManager;
+
+    invoke-virtual {v1}, Landroid/net/wifi/WifiManager;->isWifiEnabled()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_0
+
+    invoke-virtual {v1, v3}, Landroid/net/wifi/WifiManager;->setWifiEnabled(Z)Z
+
+    const-string v2, "Wi-Fi off"
+
+    invoke-static {v0, v2, v3}, Landroid/widget/Toast;->makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Landroid/widget/Toast;->show()V
+
+    :goto_0
+    return-void
+
+    :cond_0
+    const/4 v2, 0x1
+
+    invoke-virtual {v1, v2}, Landroid/net/wifi/WifiManager;->setWifiEnabled(Z)Z
+
+    const-string v2, "Wi-Fi on"
+
+    invoke-static {v0, v2, v3}, Landroid/widget/Toast;->makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Landroid/widget/Toast;->show()V
+
+    goto :goto_0
+.end method

--- /dev/null
+++ b/services/smali/com/android/server/policy/PhoneWindowManagers$SwipeListener.smali
@@ -0,0 +1,53 @@
+.class public Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;
+.super Ljava/lang/Object;
+.source "PhoneWindowManagers$SwipeListener.java"
+
+
+# instance fields
+.field private mContext:Landroid/content/Context;
+
+
+# direct methods
+.method public constructor <init>(Landroid/content/Context;)V
+    .locals 0
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    iput-object p1, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->mContext:Landroid/content/Context;
+
+    invoke-virtual {p0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->regReceiver()V
+
+    return-void
+.end method
+
+.method static synthetic access$0(Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;)Landroid/content/Context;
+    .locals 1
+
+    iget-object v0, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->mContext:Landroid/content/Context;
+
+    return-object v0
+.end method
+
+
+# virtual methods
+.method public regReceiver()V
+    .locals 3
+
+    new-instance v0, Landroid/content/IntentFilter;
+
+    invoke-direct {v0}, Landroid/content/IntentFilter;-><init>()V
+
+    const-string v1, "my.settings.GESTURE"
+
+    invoke-virtual {v0, v1}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V
+
+    iget-object v1, p0, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;->mContext:Landroid/content/Context;
+
+    new-instance v2, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;
+
+    invoke-direct {v2, p0}, Lcom/android/server/policy/PhoneWindowManagers$SwipeListener$1;-><init>(Lcom/android/server/policy/PhoneWindowManagers$SwipeListener;)V
+
+    invoke-virtual {v1, v2, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;
+
+    return-void
+.end method
-- 
2.7.4

